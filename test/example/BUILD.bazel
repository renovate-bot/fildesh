load("//test/example:example.bzl", "fildesh_expect_test")

fildesh_expect_test(
    name = "args_test",
    srcs = ["//example:args.fildesh"],
    expect = "args.txt",
)

fildesh_expect_test(
    name = "args2_test",
    srcs = ["//example:args.fildesh"],
    args = [
        "--offset=2",
        "--limit=7",
    ],
    expect = "args2.txt",
)

fildesh_expect_test(
    name = "args_forkonly_test",
    srcs = ["args_forkonly_test.fildesh"],
    expect = "args.txt",
    forkonly = True,
)

fildesh_expect_test(
    name = "args2_forkonly_test",
    srcs = ["args_forkonly_test.fildesh"],
    args = [
        "--offset=2",
        "--limit=7",
    ],
    expect = "args2.txt",
    forkonly = True,
)

fildesh_expect_test(
    name = "convoluted_test",
    srcs = ["//example:convoluted.fildesh"],
    expect = "convoluted.txt",
    target_compatible_with = select({
        "@platforms//os:windows": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)

fildesh_expect_test(
    name = "hello_test",
    srcs = ["//example:hello.fildesh"],
    expect = "//test/expect:literal_hello.txt",
)

fildesh_expect_test(
    name = "name_test",
    srcs = ["//example:name.fildesh"],
    data = ["//example:includetest.fildesh"],
    expect = "name.txt",
)

fildesh_expect_test(
    name = "silly_test",
    srcs = ["//example:silly.fildesh"],
    data = [
        "//example:args.fildesh",
        "//example:hello.fildesh",
        "//example:name.fildesh",
    ],
    expect = "silly.txt",
    target_compatible_with = select({
        "@platforms//os:windows": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)

fildesh_expect_test(
    name = "test_test",
    srcs = ["//example:test.fildesh"],
    expect = "test.txt",
    target_compatible_with = select({
        "@platforms//os:windows": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)
