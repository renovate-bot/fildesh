load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")

exports_files([
    "execfd.c",
    "godo.c",
    "time2sec.c",
    "void.c",
], visibility = [
    "//test/builtin:__pkg__",
])

cc_library(
    name = "fildesh_builtin_lib",
    srcs = [
        "fildesh.c",
        "execfd.c",
        "godo.c",
        "ssh-all.c",
        "waitdo.c",
        "xargz.c",
        "xpipe.c",
        "//include:fildesh_posix_thread.h",
        "//src/bin:version.h",
        "//src/builtin:add.c",
        "//src/builtin:bestmatch.c",
        "//src/builtin:capture_string.c",
        "//src/builtin:cmp.c",
        "//src/builtin:cmptxt.c",
        "//src/builtin:delimend.c",
        "//src/builtin:elastic_pthread.c",
        "//src/builtin:expect_failure.c",
        "//src/builtin:fildesh_builtin.c",
        "//src/builtin:fildesh_builtin.h",
        "//src/builtin:oargz.c",
        "//src/builtin:replace_string.c",
        "//src/builtin:seq.c",
        "//src/builtin:splice.c",
        "//src/builtin:sponge.c",
        "//src/builtin:sxpb2json.c",
        "//src/builtin:sxpb2txtpb.c",
        "//src/builtin:sxpb2yaml.c",
        "//src/builtin:time2sec.c",
        "//src/builtin:transpose.c",
        "//src/builtin:ujoin.c",
        "//src/builtin:void.c",
    ],
    defines = [
        "FILDESH_BUILTIN_LIBRARY",
    ],
    deps = [
        "//:fildesh_lib",
        "//:sxproto_lib",
        "//src/command:alias_c",
        "//src/syntax:line_c",
        "//src/syntax:opt_c",
        "//src/syntax:symval_c",
    ],
    visibility = [
        "//src/bin:__pkg__",
        "//test/builtin:__pkg__",
    ],
)

cc_binary(
    name = "elastic_aio",
    srcs = ["elastic_aio.c"],
    deps = ["//:fildesh_lib"],
    linkopts = select({
        "@platforms//os:linux": ["-lrt"],
        "//conditions:default": [],
    }),
    target_compatible_with = [
        "@platforms//os:linux",
    ],
    visibility = ["//test/builtin:__pkg__"],
)

cc_binary(
    name = "elastic_poll",
    srcs = ["elastic_poll.c"],
    deps = ["//:fildesh_lib"],
    target_compatible_with = select({
        "@platforms//os:windows": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    visibility = ["//test/builtin:__pkg__"],
)

cc_binary(
    name = "execfd",
    srcs = [
        "execfd.c",
        "//src/builtin:fildesh_builtin.h",
    ],
    deps = ["//:fildesh_lib"],
    visibility = ["//test/builtin:__pkg__"],
)

cc_binary(
    name = "sshall",
    srcs = ["ssh-all.c"],
    deps = ["//:fildesh_lib"],
    visibility = ["//test/builtin:__pkg__"],
)

cc_binary(
    name = "waitdo",
    srcs = [
        "waitdo.c",
        "//src/builtin:fildesh_builtin.h",
    ],
    deps = ["//:fildesh_lib"],
    visibility = ["//test/builtin:__pkg__"],
)

