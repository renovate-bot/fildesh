#!/bin/env fildesh

(: source_root Str .self.env.PWD)
(: bld_dst Str (++ source_root "/bld"))
(: pkg_dst Str (++ bld_dst "/pkg"))
(: root_dst Str (++ pkg_dst "/fildesh"))
(: pkg_debian Str (++ root_dst "/DEBIAN"))
(: architecture Str (?? .self.opt.architecture "amd64"))

rm -fr "${bld_dst}"

$(barrier)
install -d "${pkg_debian}" "${root_dst}/usr"

$(barrier)
cmake -B "${bld_dst}" \
  -D "CMAKE_BUILD_TYPE:STRING=Release" \
  -D "CMAKE_INSTALL_PREFIX:PATH=${root_dst}/usr"

$(barrier)
|< cmake --build "${bld_dst}"
|> void

$(barrier)
|< cmake --install "${bld_dst}" --component "bin"
|> void
|< cmake --install "${bld_dst}" --component "lib"
|> void
|< cmake --install "${bld_dst}" --component "share_vim"
|> void


$(barrier)
|< capture_string -x "${source_root}/src/bin/version.h" -- "." "\""
|> replace_string -o $(OF version) -- "\""

splice -o "${pkg_debian}/control" / \
  "Package: fildesh\n" \
  "Version: " $(XA version) "\n" \
  "Maintainer: grencez\n" \
  "Architecture: ${architecture}\n" \
  "Description: create nonlinear pipelines with file descriptors\n" \
  /

$(barrier)
dpkg-deb -Zxz --root-owner-group --build "${root_dst}"

$(barrier)
|< splice / "You have a shiny new package: ${pkg_dst}/fildesh.deb\n" /
|> stdout
